; Modified to conform to Modern UI 2.0

!define PROJECT_PATH ".."

!define PRODUCT_NAME "%(name)s"
!define PRODUCT_VERSION "%(version)s"
!define PRODUCT_PUBLISHER "MusicBrainz"
!define PRODUCT_DESCRIPTION "%(description)s"
!define PRODUCT_URL "%(url)s"
!define PRODUCT_UNINST_KEY "Software\Microsoft\Windows\CurrentVersion\Uninstall\${PRODUCT_NAME}"
!define PRODUCT_UNINST_ROOT_KEY "HKLM"
!define PRODUCT_STARTMENU_REGVAL "NSIS:StartMenuDir"

SetCompressor /FINAL /SOLID LZMA 
Name "${PRODUCT_NAME} ${PRODUCT_VERSION}"
OutFile "picard-setup-${PRODUCT_VERSION}.exe"
ShowInstDetails show
ShowUnInstDetails show
BrandingText " "
; We need this so Windows 7/Vista lets us install what we need to
RequestExecutionLevel highest

; The default installation directory
InstallDir "$PROGRAMFILES\${PRODUCT_NAME}"

; The default installation directory
InstallDirRegKey HKLM "Software\MusicBrainz\${PRODUCT_NAME}" "InstallDir"

!include "MUI2.nsh"
!include "InstallOptions.nsh"

; MUI Settings

; Make installer pretty
!define MUI_HEADERIMAGE
!define MUI_HEADERIMAGE_RIGHT
!define MUI_HEADERIMAGE_BITMAP "${PROJECT_PATH}\installer\images\hx.bmp" ;
!define MUI_WELCOMEFINISHPAGE_BITMAP "${PROJECT_PATH}\installer\images\wiz.bmp"
!define MUI_ICON "${PROJECT_PATH}\installer\images\tango-install.ico"
!define MUI_UNICON "${NSISDIR}\Contrib\Graphics\Icons\classic-uninstall.ico"


; Abort Warning
!define MUI_ABORTWARNING

; Welcome page
!define MUI_WELCOMEPAGE_TITLE_3LINES
!insertmacro MUI_PAGE_WELCOME

; License page
!insertmacro MUI_PAGE_LICENSE "${PROJECT_PATH}\COPYING.txt"

; Directory page
!insertmacro MUI_PAGE_DIRECTORY

; Start menu page
var ICONS_GROUP
!define MUI_STARTMENUPAGE_DEFAULTFOLDER "MusicBrainz"
!define MUI_STARTMENUPAGE_NODISABLE
!define MUI_STARTMENUPAGE_REGISTRY_ROOT "${PRODUCT_UNINST_ROOT_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_KEY "${PRODUCT_UNINST_KEY}"
!define MUI_STARTMENUPAGE_REGISTRY_VALUENAME "${PRODUCT_STARTMENU_REGVAL}"
!insertmacro MUI_PAGE_STARTMENU Application $ICONS_GROUP

; Components page
!insertmacro MUI_PAGE_COMPONENTS

; Instfiles page
!insertmacro MUI_PAGE_INSTFILES

; Finish page
!define MUI_FINISHPAGE_TITLE_3LINES
!define MUI_FINISHPAGE_RUN "$INSTDIR\picard.exe"
!insertmacro MUI_PAGE_FINISH

; Uninstaller pages
!insertmacro MUI_UNPAGE_CONFIRM
UninstPage custom un.RemoveSettingsPage
!insertmacro MUI_UNPAGE_INSTFILES
!define MUI_UNPAGE_FINISH_TITLE_3LINES
!insertmacro MUI_UNPAGE_FINISH

; Reserve files
ReserveFile "removeSettings.ini"
ReserveFile "${NSISDIR}\Plugins\InstallOptions.dll"

; Language files
!insertmacro MUI_LANGUAGE "English"

; Adds info to installer
VIProductVersion "0.12.0.0"
VIAddVersionKey /LANG=${LANG_ENGLISH} "ProductName" "${PRODUCT_NAME}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "Comments" "${PRODUCT_DESCRIPTION}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "CompanyName" "${PRODUCT_PUBLISHER}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "LegalCopyright" "© ${PRODUCT_PUBLISHER} under the GNU GPLv2."
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileDescription" "Installation for ${PRODUCT_NAME}"
VIAddVersionKey /LANG=${LANG_ENGLISH} "FileVersion" "%(version)s"


; defines for newer versions
!include Sections.nsh
!define SECTION_ON ${SF_SELECTED} # 0x1
!include "FileFunc.nsh"
!include "LogicLib.nsh"

; Install
Section !Required req
  SectionIn RO
    SetOutPath "$INSTDIR"
    SetOverwrite on
        
    ; Files
    File "${PROJECT_PATH}\dist\"
    
    RMDir "$INSTDIR\imageformats"
    CreateDirectory "$INSTDIR\imageformats"
    SetOutPath "$INSTDIR\imageformats"
    File /r "${PROJECT_PATH}\dist\imageformats\"

    ; Write the installation path into the registry
    WriteRegStr HKLM "Software\MusicBrainz\${PRODUCT_NAME}" "InstallDir" "$INSTDIR"
  
    ; Create uninstaller
    WriteUninstaller "$INSTDIR\uninst.exe"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayName" "${PRODUCT_NAME}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayIcon" "$INSTDIR\picard.exe"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "DisplayVersion" "${PRODUCT_VERSION}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Publisher" "${PRODUCT_PUBLISHER}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "InstallSource" "$INSTDIR\"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "Comments" "${PRODUCT_DESCRIPTION}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "URLInfoAbout" "${PRODUCT_URL}"
    WriteRegStr ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}" "UninstallString" "$INSTDIR\uninst.exe"

SectionEnd

Section !Imageformats imgs
  SectionIn RO
  RMDir "$INSTDIR\imageformats"
  CreateDirectory "$INSTDIR\imageformats"
  SetOutPath "$INSTDIR\imageformats"
  File /r "${PROJECT_PATH}\dist\imageformats\"
SectionEnd

Section "Phonon" phonon
  RMDir "$INSTDIR\phonon_backend"
  CreateDirectory "$INSTDIR\phonon_backend"
  SetOutPath "$INSTDIR\phonon_backend"
  File /r "${PROJECT_PATH}\dist\phonon_backend\"
SectionEnd

Section "Languages" lang
  RMDir "$INSTDIR\locale"
  CreateDirectory "$INSTDIR\locale"
  SetOutPath "$INSTDIR\locale"
  File /r "${PROJECT_PATH}\dist\locale\"
SectionEnd

SubSection "Shortcuts" shortcuts
  
  Section "Startmenu" startmenu
    !insertmacro MUI_STARTMENU_WRITE_BEGIN Application
    CreateDirectory "$SMPROGRAMS\$ICONS_GROUP"
    CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\${PRODUCT_NAME}.lnk" "$INSTDIR\picard.exe"
    CreateShortCut "$SMPROGRAMS\$ICONS_GROUP\Uninstall ${PRODUCT_NAME}.lnk" "$INSTDIR\uninst.exe"
    !insertmacro MUI_STARTMENU_WRITE_END
  SectionEnd
  
  Section "Desktop" desktop
    CreateShortCut "$DESKTOP\${PRODUCT_NAME}.lnk" "$INSTDIR\picard.exe"

  SectionEnd
  
  Section "Quick Launch" quicklaunch
    CreateShortCut "$QUICKLAUNCH\${PRODUCT_NAME}.lnk" "$INSTDIR\picard.exe"
  SectionEnd

SubSectionEnd

Section "Plugins" plugins
  CreateDirectory "$APPDATA\MusicBrainz\Picard\plugins"
  CreateDirectory "$INSTDIR\plugins"

  Push $R0
  Push $R1

  ; Moves old plugins to appdata folder
  StrCpy $R0 "$INSTDIR\plugins"                     ;Directory move from
  StrCpy $R1 "$APPDATA\MusicBrainz\Picard\plugins"  ;Directory move into

  Push $R6
  Push $R7
  Push $R8
  Push $R9

  ${Locate} "$R0" "/L=D" "CreateDirectory"
  ${Locate} "$R0" "/L=F /M=*.* /S= /G=1" "MoveFile"

  Push $R2
  pjump:
  StrCpy $R2 0
  ${Locate} "$R0" "/L=DE" "RemoveDir"
  StrCmp $R2 0 0 pjump
  Pop $R2


  IfErrors 0 +2
  MessageBox MB_OK 'error' IDOK

  Pop $R9
  Pop $R8
  Pop $R7
  Pop $R6

  Pop $R1
  Pop $R0


  SetOutPath "$APPDATA\MusicBrainz\Picard\plugins"
  ; Moves new plugins in and overwrites old ones
  File /r "${PROJECT_PATH}\dist\plugins\"
  
  CreateDirectory "$INSTDIR\plugins"
SectionEnd

Function MoveFile
  Push $R2
  StrLen $R2 "$R0"
  StrCpy $R2 $R9 '' $R2
  StrCpy $R2 "$R1$R2"
  IfFileExists "$R2" +3 0
  rename "$R9" "$R2"
  goto done
  delete "$R2"
  rename "$R9" "$R2"
  delete "$R9"
  done:
  Pop $R2
  Push $R1
FunctionEnd

Function CreateDirectory
  ${If} $R6 == ""
  Push $R2
  StrLen $R2 "$R0"
  StrCpy $R2 $R9 '' $R2
  CreateDirectory "$R1$R2"
  Pop $R2
  ${EndIf}
  Push $R1
FunctionEnd

Function RemoveDir
  ${If} $R6 == ""
  RMDir $R9
  IntOp $R2 $R2 + 1
  ${EndIf}
  Push $R1
FunctionEnd

; Uninstall

Function un.RemoveSettingsPage

  !insertmacro MUI_DEFAULT MUI_UNCONFIRMPAGE_TEXT_TOP ""
  !insertmacro MUI_DEFAULT MUI_UNCONFIRMPAGE_TEXT_LOCATION ""
  !insertmacro INSTALLOPTIONS_DISPLAY "removeSettings.ini"

FunctionEnd

Section Uninstall

  !insertmacro MUI_STARTMENU_GETFOLDER "Application" $ICONS_GROUP
  
  RMDir /r "$INSTDIR"

  Delete "$DESKTOP\${PRODUCT_NAME}.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\${PRODUCT_NAME}.lnk"
  Delete "$SMPROGRAMS\$ICONS_GROUP\Uninstall ${PRODUCT_NAME}.lnk"
  RMDir "$SMPROGRAMS\$ICONS_GROUP"

  DeleteRegKey ${PRODUCT_UNINST_ROOT_KEY} "${PRODUCT_UNINST_KEY}"
  DeleteRegKey HKLM "Software\MusicBrainz\${PRODUCT_NAME}"
  
  !insertmacro INSTALLOPTIONS_READ $R0 "removeSettings.ini" "Field 1" "State"
  StrCmp $R0 "1" 0 +2
    ; Even more attempts
    DeleteRegKey HKCU "Software\MusicBrainz\Picard\persist"
    DeleteRegKey HKCU "Software\MusicBrainz\Picard\setting"
    DeleteRegKey HKCU "Software\MusicBrainz\Picard"
    ;RMDir "$APPDATA\MusicBrainz\Picard\plugins"

SectionEnd

; Checks whether program is running.
!define WNDCLASS "QWidget"
!define WNDTITLE "${PRODUCT_NAME}"
Function un.onInit
  !insertmacro INSTALLOPTIONS_EXTRACT "removeSettings.ini"
  FindWindow $0 "${WNDCLASS}" "${WNDTITLE}"
  StrCmp $0 0 continueInstall
    MessageBox MB_ICONSTOP|MB_OK "The application you are trying to remove is running. Close it and try again."
    Abort
  continueInstall:
FunctionEnd
Function .onInit
  FindWindow $0 "${WNDCLASS}" "${WNDTITLE}"
  StrCmp $0 0 continueInstall
    MessageBox MB_ICONSTOP|MB_OK "The application you are trying to install is running. Close it and try again."
    Abort
  continueInstall:
  !insertmacro UnselectSection ${plugins}
  !insertmacro UnselectSection ${quicklaunch} 
FunctionEnd

!insertmacro MUI_FUNCTION_DESCRIPTION_BEGIN
  !insertmacro MUI_DESCRIPTION_TEXT ${req} "Installs ${PRODUCT_NAME} along with the necessary files for it run."
  !insertmacro MUI_DESCRIPTION_TEXT ${phonon} "Installs support for limited music playback in ${PRODUCT_NAME}."
  !insertmacro MUI_DESCRIPTION_TEXT ${lang} "Installs translations of ${PRODUCT_NAME} in different languages."
  !insertmacro MUI_DESCRIPTION_TEXT ${plugins} "Installs all of the plugins that are bundled with this release."
  !insertmacro MUI_DESCRIPTION_TEXT ${desktop} "Installs a shortcut on the desktop."
  !insertmacro MUI_DESCRIPTION_TEXT ${startmenu} "Installs shortcuts in the Start Menu."
  !insertmacro MUI_DESCRIPTION_TEXT ${quicklaunch} "Installs a shortcut in the quicklaunch bar."
!insertmacro MUI_FUNCTION_DESCRIPTION_END